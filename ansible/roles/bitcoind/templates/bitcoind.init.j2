#! /bin/sh

### BEGIN INIT INFO
# Provides:          bitcoind
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: bitcoind startup script
# Description:       bitcoind startup script
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
DESC="Bitcoin Daemon"
NAME=bitcoind
CLI=/usr/bin/bitcoin-cli
PIDFILE={{ datadir }}/bitcoind.pid
SCRIPTNAME=/etc/init.d/bitcoind
CHUID={{ deployer_user.name }}:{{ deployer_user.name }}
DAEMON=/usr/bin/bitcoind
ZMQ=tcp://{{ btc_opts.zmq.addr }}:{{ btc_opts.zmq.port }}
DAEMON_ARGS="\
  -daemon \
  {{ btc_opts.net }} \
  -port={{ btc_opts.port }} \
  -datadir={{ datadir }} \
  -txindex=1 \
  -zmqpubhashblock=$ZMQ \
  -zmqpubhashtx=$ZMQ \
  -zmqpubrawblock=$ZMQ \
  -zmqpubrawtx=$ZMQ \
  -rpcauth={{ rpc.auth }} \
  -rpcport={{ rpc_port }} \
  {{ btc_opts.extras }} \
  -pid=$PIDFILE"
STOP_ARGS="\
  {{ btc_opts.net }} \
  -datadir={{ datadir }}"

test -x $DAEMON || exit 5

. /lib/init/vars.sh

. /lib/lsb/init-functions

do_stop()
{
   # Return
   #   0 if daemon has been stopped
   #   1 if daemon was already stopped
   #   2 if daemon could not be stopped
   #   other if a failure occurred
   start-stop-daemon --start --chuid $CHUID --exec $CLI -- $STOP_ARGS stop || return 1
   start-stop-daemon --stop --quiet --chuid $CHUID --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME || return 2
}

do_start()
{
   # Return
   #   0 if daemon has been started
   #   1 if daemon was already running
   #   2 if daemon could not be started
   start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null || return 1
   start-stop-daemon --start --quiet --chuid $CHUID --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS || return 2
}

case "$1" in
  start)
   [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
   do_start
   case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
   esac
   [ -f $PIDFILE ] && chmod a=rw $PIDFILE
   ;;
  stop)
   [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
   do_stop
   case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
   esac
   ;;
  restart|force-reload)
   ${0} stop
   ${0} start
   ;;
  *)
   echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
   exit 3
   ;;
esac

exit 0
